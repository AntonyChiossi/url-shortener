version: "3.9"

services:
  lb:
    image: nginx
    ports:
      - "8082:80"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist/shortener:/usr/share/nginx/html
    networks:
      - webnet
    depends_on:
      - web
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10

  db:
    image: postgres
    volumes:
      - dbdata:/var/lib/postgresql/data/
    env_file:
      - .env.dev
    ports:
      - "5432:5432"
    networks:
      - webnet

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379"
    networks:
      - webnet

  web:
    build: .
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python3 manage.py migrate --run-syncdb && /usr/local/bin/gunicorn shortener.wsgi:application -w 2 -b :8000"
    ports:
      - "8000"
    volumes:
      - .:/code
    env_file:
      - .env.dev
    depends_on:
      - db
      - rabbitmq
    networks:
      - webnet
    deploy:
      mode: replicated
      replicas: 3

  celery:
    build: .
    command: celery -A shortener worker -l info
    volumes:
      - .:/code
    env_file:
      - .env.dev
    depends_on:
      - db
      - rabbitmq
    networks:
      - webnet

  celery-beat:
    build: .
    command: celery -A shortener beat -l info
    volumes:
      - .:/code
    env_file:
      - .env.dev
    depends_on:
      - db
      - rabbitmq
    networks:
      - webnet

  rabbitmq:
    image: rabbitmq
    ports:
      - "15672"
      - "5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - webnet


volumes:
  dbdata:
    driver: local
    driver_opts:
      type: none
      device: data/db
      o: bind
  rabbitmq_data:
  # static_data:

networks:
  webnet: